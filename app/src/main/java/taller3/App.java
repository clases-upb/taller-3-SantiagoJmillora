/*
 * This source file was generated by the Gradle 'init' task
 */
package taller3;

public class App {

   public static void main(String[] args) {
   

   }

  /*
    * 1. Construya un algoritmo e implemente la función en Java Escribir_asc que
    * reciba tres números enteros diferentes
    * y devuelva en un String en orden ascendente con el siguiente formato:
    * "##### - ##### - #####", donde el primero es
    * el mayor de todos, el segundo el del medio, el tercero el menor de todos. Si
    * hay al menos dos números iguales,
    * devolverá el mensaje: "Error: La función no considera números iguales". Si
    * hay un error inesperado, deberá mostrar
    * el mensaje: "Ocurrió un error inesperado".
    */
   public static String Escribir_asc(int num1, int num2, int num3){
      try {
         String mensajeFinal = "";

         if(num1 > num2 && num2 > num3){ //123

            mensajeFinal = (num1 + " - " + num2 + " - " + num3);
            return mensajeFinal;

         } else if(num1 > num3 && num3 > num2){ //132
            
            mensajeFinal = (num1 + " - " + num3 + " - " + num2);
            return mensajeFinal;

         } else if(num2 > num1 && num1 > num3){ //213

            mensajeFinal = (num2 + " - " + num1 + " - " + num3);
            return mensajeFinal;

         } else if(num2 > num3 && num3 > num1){ //231

            mensajeFinal = (num2 + " - " + num3 + " - " + num1);
            return mensajeFinal;

         } else if(num3 > num2 && num2 > num1){//321

            mensajeFinal = (num3 + " - " + num2 + " - " + num1);
            return mensajeFinal;

         } else if(num3 > num1 && num1 > num2){//312

            mensajeFinal = (num3 + " - " + num1 + " - " + num2);
            return mensajeFinal;

         } else {
            return "Error: La función no considera números iguales";
         }


      } catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
   }


   /*
    * 2. Construya un algoritmo e implemente la función en Java Obtener_cifras que
    * recibe un número entre 0 y 50.000
    * y devuelve byte con las cifras que tiene. Por ejemplo 10 tiene dos cifras,
    * 9999 tiene 4 cifras. Si el número
    * no está en el rango devuelve 0. Y si hay un error inesperado, devuelve -1.
    * 
    */
   public static byte Obtener_cifras(int numero){
      try {
         final byte cifra1 = 1, cifras2 = 2, cifras3 = 3, cifras4 = 4, cifras5 = 5, cero = 0, nueve = 9, diez = 10, nueve_nueve = 99, cien = 100;
         final short tres_nueves = 999, mil = 1000, cuatro_nueves = 9999, diez_mil = 10000;
         final int cincuenta_mil = 50000;
         

         if(numero >= cero && numero <= nueve){

            return cifra1;

         } else if(numero >= diez && numero <= nueve_nueve){
            
            return cifras2;

         } else if(numero >= cien && numero <= tres_nueves){
            
            return cifras3;

         } else if(numero >= mil && numero <= cuatro_nueves){

            return cifras4;

         } else if(numero >= diez_mil && numero <= cincuenta_mil){

            return cifras5;

         } else {

            return 0;

         }

      } catch (Exception e) {
         return -1;
      }
   }


   /*
    * 3. Construya un algoritmo e implemente la función en Java Clasificar_char que
    * recibe un caracter, y
    * devuelve un string de acuerdo con las siguientes condiciones: si es un
    * alfabético, deuvelve "ES LETRA";
    * si es numérico, devuelve "ES NUMERO" o si es un carácter especial, devuelve
    * "ESPECIAL".
    * Los caracteres se validan de acuerdo con la tabla ascii básica y lo explicado
    * en clase.
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */
   public static String Clasificar_char(char caracter){
      try {
         final byte limiteInferior_numero = 48, limiteSup_numero = 57, limiteInferior_letra_mayus = 65, limiteSup_letra_mayus = 90, limiteInferior_letra = 97, limiteSup_letra = 122;

         if(caracter >= limiteInferior_numero && caracter <= limiteSup_numero)
            return "ES NUMERO";
         else if(caracter >= limiteInferior_letra_mayus && caracter <= limiteSup_letra_mayus)
            return "ES LETRA";
         else if(caracter >= limiteInferior_letra && caracter <= limiteSup_letra)
            return "ES LETRA";
         else return "ESPECIAL";


      } catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
   }


   /*
    * 
    * 4. Construya un algoritmo e implemente la función en Java
    * Hallar_division_exacta que pida dos números enteros,
    * calcule la división del primero sobre el segundo, y al final si la división
    * es exacta, devuelva "DIVISION EXACTA"
    * y de lo contrario devuelva "DIVISION NO EXACTA". (Exacta significa que tiene
    * cociente, pero no residuo).
    * 
    * Si alguno de los dos números que recibe es cero o negativo, devuelva
    * "NO SE ADMITE CERO O NEGATIVOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * Nota: Revise el funcionamiento del operador mod que le puede ayudar.
    * 
    * 
    * 
    */
   public static String Hallar_division_exacta(int num1, int num2){
      try {
         final byte cero = 0;

         if(num1 <= cero || num2 <= cero)
            return "NO SE ADMITE CERO O NEGATIVOS";

         int resultado_division = num1 % num2;

         if(resultado_division > cero)
            return "DIVISION NO EXACTA";
         else if(resultado_division == cero)
            return "DIVISION EXACTA";
         else
            return "";

      } catch (Exception e) {
         return "Ocurrió un error inesperado" + e;
      }
   }
   

   /*
    * 5. En la siguiente tabla se encuentra la información de las habitaciones de
    * una finca hotel:
    * 
    * Habitación    Camas  Planta    AA/VENTILADOR
    *    -101         2     Primera     AA
    *    -102         1     Primera     VE
    *    -201         3     Segunda     AA
    *    -202         2     Segunda     VE
    *    -301         2     Tercera     AA
    * 
    * 
    * Construya un algoritmo e implemente la función en Java Consultar_hab que
    * reciba en un byte el número de camas
    * y en un string si desea VE o AA, y deuvelva en un texto el o los números de
    * habitación que cumplen ese requisito.
    * Si son varias habitaciones, devuelvalas separadas por el caracter |
    * (normalmente, al lado izquierdo de la tecla del 1).
    * Ejemplo: "101|301"
    * Si el número de camas no está entre 1 y 3 o el string es diferente a AA o VE,
    * devuelva "DATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */
   public static String Consultar_hab(byte num_camas, String ve_aa){
      try {
         final byte uno = 1, dos = 2, tres = 3;

         if(num_camas == dos && ve_aa.equals("AA"))
            return "101|301";
         else if (num_camas == uno && ve_aa.equals("VE"))
            return "102";
         else if (num_camas == dos && ve_aa.equals("VE"))
            return "202";
         else if(num_camas == tres && ve_aa.equals("AA"))
            return "201";
         else
            return "DATOS NO VÁLIDOS";
      } catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
   }

   
   /*
    * 
    * 6. Un restaurante vende 3 platos. Si el cliente solicita el plato 1, le dan
    * el postre gratis; si selecciona los platos
    * 1 y 2, le dan la bebida gratis y si selecciona los platos 1,2 y 3, le dan
    * postre y bebida.
    * Construya un algoritmo e implemente la función Obtener_obs en Java que reciba
    * 3 booleanos, uno para cada plato y en
    * un String devuelva el obsequio ganado en mayúscula, así: "BEBIDA", "POSTRE",
    * "BEBIDA Y POSTRE".
    * Si los 3 platos vienen en false, , devuelva "PLATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */
   public static String Obtener_obs(boolean plato1, boolean plato2, boolean plato3){
      try {
         if(plato1 == true && plato2 == false && plato3 == false)
            return "POSTRE";
         else if(plato1 == true && plato2 == true && plato3 == false)
            return "BEBIDA";
         else if(plato1 == true && plato2 == true && plato3 == true)
            return "BEBIDA Y POSTRE";
         else return "PLATOS NO VÁLIDOS";
      } catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
   }






   /*
    * 7. Un grupo de amigos hace un sorteo semanalmente con pelotas de ping pong,
    * para saber quién invita y a qué  la próxima salida.
    * Las opciones dependen del color que sacan en cada bola y son:
    * 
    * verde: Invita a las cervezas
    * azul: Invita a la pizza
    * rojo: Invita al postre
    * amarillo: Paga el parqueadero de todos
    * blanco o negro: Vaya y disfrute
    * Si la función recibe algo diferente a los colores dados, debe retornar
    * "Error en el color".
    * 
    * Se necesita una función en java Conocer_invitacion que reciba un string con
    * el color de la bola y retorna un
    * String con exactamente el texto de la invitación correspondiente.
    * 
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */
    public static String Conocer_invitacion(String color_bola){
      try {
         final String verde = "verde", azul = "azul", rojo = "rojo", amarillo = "amarillo", blanco = "blanco", negro = "negro";

         if (color_bola.equals(verde)) 
            return "Invita a las cervezas";
         else if (color_bola.equals(azul)) 
            return "Invita a la pizza";
         else if (color_bola.equals(rojo)) 
            return "Invita al postre";
         else if (color_bola.equals(amarillo)) 
            return "Paga el parqueadero de todos";
         else if (color_bola.equals(blanco) || color_bola.equals(negro)) 
            return "Vaya y disfrute";
         else
            return "Error en el color";
      } catch (Exception e) {
        return "Ocurrió un error inesperado";
      }
    }
}
